import Chatbot from "react-chatbotify";
// import "react-chatbotify/dist/main.css";

const flow = {
  start: {
    message: "OlÃ¡! Como posso ajudar vocÃª hoje?",
    options: [
      "Quero saber mais sobre o portfÃ³lio",
      "Entrar em contato",
      "Quais tecnologias vocÃª usa?",
      "Como funciona o processo de desenvolvimento?",
      "Qual o prazo mÃ©dio para um projeto?",
      "Como Ã© feito o orÃ§amento?",
      "VocÃª trabalha sozinho ou em equipe?",
      "Quais tipos de projeto vocÃª jÃ¡ fez?",
      "VocÃª oferece manutenÃ§Ã£o ou suporte?",
      "Quais as formas de pagamento?",
      "Como sÃ£o feitas as reuniÃµes?",
      "Posso ver outros trabalhos seus?",
      "Qual seu diferencial?",
    ],
    path: (params: any) => {
      const input = params.userInput || "";
      const normalized = input.trim().toLowerCase();
      if (normalized === "quero saber mais sobre o portfÃ³lio") return "portfolioInfo";
      if (normalized === "entrar em contato") return "contactInfo";
      if (normalized === "quais tecnologias vocÃª usa?") return "tecnologias";
      if (normalized === "como funciona o processo de desenvolvimento?") return "processo";
      if (normalized === "qual o prazo mÃ©dio para um projeto?") return "prazo";
      if (normalized === "como Ã© feito o orÃ§amento?") return "orcamento";
      if (normalized === "vocÃª trabalha sozinho ou em equipe?") return "equipe";
      if (normalized === "quais tipos de projeto vocÃª jÃ¡ fez?") return "tiposProjetos";
      if (normalized === "vocÃª oferece manutenÃ§Ã£o ou suporte?") return "suporte";
      if (normalized === "quais as formas de pagamento?") return "pagamento";
      if (normalized === "como sÃ£o feitas as reuniÃµes?") return "reunioes";
      if (normalized === "posso ver outros trabalhos seus?") return "portfolioOnline";
      if (normalized === "qual seu diferencial?") return "diferencial";
      return "start";
    },
  },
  portfolioInfo: {
    message: "Este portfÃ³lio foi criado com React, Vite e Tailwind CSS!",
    options: ["Voltar ao inÃ­cio"],
    path: () => "start",
  },
  contactInfo: {
    message: "VocÃª pode entrar em contato pelo e-mail: seuemail@exemplo.com",
    options: ["Voltar ao inÃ­cio"],
    path: () => "start",
  },
  tecnologias: {
    message: "Trabalho principalmente com React, TypeScript, Node.js, Vite, Tailwind CSS e integraÃ§Ãµes com APIs.",
    options: ["Voltar ao inÃ­cio", "Quais tipos de projeto vocÃª jÃ¡ fez?"],
    path: (params: any) => {
      const input = params.userInput || "";
      const normalized = input.trim().toLowerCase();
      if (normalized === "quais tipos de projeto vocÃª jÃ¡ fez?") return "tiposProjetos";
      return "start";
    },
  },
  processo: {
    message: "O processo comeÃ§a com o entendimento da sua necessidade, seguido de planejamento, prototipaÃ§Ã£o, desenvolvimento, testes e entrega.",
    options: ["Voltar ao inÃ­cio", "Como Ã© feito o orÃ§amento?"],
    path: (params: any) => {
      const input = params.userInput || "";
      const normalized = input.trim().toLowerCase();
      if (normalized === "como Ã© feito o orÃ§amento?") return "orcamento";
      return "start";
    },
  },
  prazo: {
    message: "O prazo mÃ©dio depende do escopo, mas projetos simples levam de 1 a 3 semanas. Projetos maiores podem levar mais tempo.",
    options: ["Voltar ao inÃ­cio"],
    path: () => "start",
  },
  orcamento: {
    message: "O orÃ§amento Ã© feito com base na complexidade, funcionalidades e prazo do projeto. Sempre envio uma proposta detalhada.",
    options: ["Voltar ao inÃ­cio", "Entrar em contato"],
    path: (params: any) => {
      const input = params.userInput || "";
      const normalized = input.trim().toLowerCase();
      if (normalized === "entrar em contato") return "contactInfo";
      return "start";
    },
  },
  equipe: {
    message: "Atuo como freelancer, mas posso trabalhar em parceria com outros profissionais conforme a demanda do projeto.",
    options: ["Voltar ao inÃ­cio"],
    path: () => "start",
  },
  tiposProjetos: {
    message: "JÃ¡ desenvolvi portfÃ³lios, landing pages, sistemas internos, integraÃ§Ãµes com APIs, dashboards e e-commerces.",
    options: ["Voltar ao inÃ­cio", "Quais tecnologias vocÃª usa?"],
    path: (params: any) => {
      const input = params.userInput || "";
      const normalized = input.trim().toLowerCase();
      if (normalized === "quais tecnologias vocÃª usa?") return "tecnologias";
      return "start";
    },
  },
  suporte: {
    message: "Sim! OfereÃ§o manutenÃ§Ã£o e suporte apÃ³s a entrega, com planos flexÃ­veis conforme a necessidade do cliente.",
    options: ["Voltar ao inÃ­cio", "Quais as formas de pagamento?"],
    path: (params: any) => {
      const input = params.userInput || "";
      const normalized = input.trim().toLowerCase();
      if (normalized === "quais as formas de pagamento?") return "pagamento";
      return "start";
    },
  },
  pagamento: {
    message: "Aceito pagamentos via Pix, transferÃªncia bancÃ¡ria e, para empresas, emissÃ£o de nota fiscal.",
    options: ["Voltar ao inÃ­cio", "Como sÃ£o feitas as reuniÃµes?"],
    path: (params: any) => {
      const input = params.userInput || "";
      const normalized = input.trim().toLowerCase();
      if (normalized === "como sÃ£o feitas as reuniÃµes?") return "reunioes";
      return "start";
    },
  },
  reunioes: {
    message: "As reuniÃµes podem ser feitas por Google Meet, Zoom ou WhatsApp, conforme sua preferÃªncia.",
    options: ["Voltar ao inÃ­cio", "Entrar em contato"],
    path: (params: any) => {
      const input = params.userInput || "";
      const normalized = input.trim().toLowerCase();
      if (normalized === "entrar em contato") return "contactInfo";
      return "start";
    },
  },
  portfolioOnline: {
    message: "Claro! VocÃª pode ver outros trabalhos acessando meu portfÃ³lio online: https://seuportfolio.com",
    options: ["Voltar ao inÃ­cio"],
    path: () => "start",
  },
  diferencial: {
    message: "Meu diferencial Ã© a comunicaÃ§Ã£o clara, entrega Ã¡gil e foco total na experiÃªncia do usuÃ¡rio e resultado do cliente.",
    options: ["Voltar ao inÃ­cio"],
    path: () => "start",
  },
};

const themes = [
  { id: "minimal_midnight", version: "0.1.0" },
];
const settings = {
  general: {
    embedded: true,
  },
  header: {
    title: "Tire suas dÃºvidas ğŸ’¬",
  },
};

export default function CustomChatbot() {
  return (
    <Chatbot flow={flow} themes={themes} settings={settings} />
  );
}